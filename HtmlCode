/* 这个函数的目的  是为了方便编写与逻辑无关的 协助页面功能的js代码 */

(function(win,$b,even){

	var $e, each, find;

	$b.even = new even();
	
	win.$b = $b;
	
	

	find = function(selector){

		if( jQuery  ) return $(selector);

		if(document.querySelector) return document.querySelector(selector);

	}

	document.onclick = function(e){

		var _this = e.target;
		
		for( ; ; ){

			if(each(_this)) return;

			_this = _this.parentElement;

			if(!_this) break;

		}
		
	}

	each = function(_this){
	
		var item,eventName = _this.attributes;
	
		var ret = false;
	
		for(var i in eventName){
		
			if (eventName.hasOwnProperty(i) === true){  
				item = eventName[i].localName;
		
				if(!clickEvent[item]) continue ;
			
				clickEvent[item](_this);  

				ret = true;
			}  
			
		}
		
		return ret;

	}

	clickEvent = {

		"$click" : function(_this){

			if(!_this) return ;

			var onclick = _this.getAttribute("$click");

			if(!onclick) return ;

			if($b.isExist(onclick)) return $b.run(onclick,_this,[{event:this}]); 
			
			eval( "onclick =  function(clickEvent){" + onclick + "}");
			
			onclick.apply(_this,[this]);

		},

		"$click-cp" : function(_this){

			var onclick = _this.getAttribute("$click-CP");

			if( onclick === null ) return;

			if( !onclick) {

				_this = _this.parentElement;

			}else{

				for( ; ; ){

					if(!_this) break;

					_this = _this.parentElement;

					if(!_this) break;

					if(_this.className.replace(/\s{2,}/g," ").split(" ").indexOf(onclick) > -1){

						break;

					}

				}

			}

			if(_this && _this.tagName) each(_this);

		},

		"$click-addclass": function(_this){

			var onclick = _this.getAttribute("$click-addClass");

			if(!onclick) return;

			if(_this.className.replace(/\s{2,}/g," ").split(" ").indexOf(onclick) < 0){

				_this.className += " " + onclick;

			}

		},

		"$click-reomveclass": function(_this){

			var onclick = _this.getAttribute("$click-reomveClass");

			if(!onclick) return;

			var classArray = _this.className.replace(/\s{2,}/g," ").split(" ");

			var index = classArray.indexOf(onclick);

			if(index > -1){

				classArray.splice(index,1);
				_this.className = classArray.join(" ");

			}

		},

		"$click-togclass": function(_this){

			var onclick = _this.getAttribute("$click-togClass");

			if(!onclick) return;

			var classArray = _this.className.replace(/\s{2,}/g," ").split(" ");

			var index = classArray.indexOf(onclick);

			if(index < 0){

				_this.className += " " + onclick;

			}else{

				classArray.splice(index,1);
				_this.className = classArray.join(" ");

			}

		},
		
		"$click-onlytogclass" : function(_this){
			
			var item,clas,index;
			
			var onclick = _this.getAttribute("$click-onlytogclass");
			
			if(!onclick ) return ;
			
			clas = _this.className.replace(/\s{2,}/g," ").split(" ");
				
			index = clas.indexOf(onclick);
			
			if(index > -1){
				clas.splice(index,1);
				_this.className = clas.join(" ");
				
			}else{
				
				var parent = _this.parentElement;
			
				var children = parent.children;
				
				for(var i = 0,len = children.length;i<len;i++){
					
					item = children[i];
					
					clas = item.className.replace(/\s{2,}/g," ").split(" ");
					
					index = clas.indexOf(onclick);
					
					if(index > -1){
						clas.splice(index,1);
						item.className = clas.join(" ");
						
					}
					
				}
				
				_this.className += " " + onclick;
			
			}
		},

		"$click-$slidetoggle" : function(_this){

			var onclick = _this.getAttribute("$click-$slideToggle");

			if(!onclick) return ;
		
			if(typeof $ != 'undefined'){

				$(onclick).slideToggle();

			}

		},

		"$click-$btngroup" : function(_this){



		},
		
		"$click-$show" : function(_this){
			
			var onclick = _this.getAttribute("$click-$show");

			if(!onclick) return ;
			
			if(typeof $ != 'undefined'){
				
				$(onclick).show();

			}
			
		},
		
		"$click-$hide" : function(_this){
			
			var onclick = _this.getAttribute("$click-$hide");

			if(onclick != null) return ;
			
			if(onclick == "") onclick = _this;
			
			if(typeof $ != 'undefined'){	
				
				$(onclick).hide();

			}
			
		},
		
		"$click-imgplace" : function( _this ){
			
			var srcPath = "srcPath";
			
			var onclick = _this.getAttribute("$click-imgPlace");
			
			if(onclick == null) return;
			
			_this = find(onclick)[0] || _this;

			var src = _this.getAttribute(srcPath);
			
			_this.setAttribute(srcPath,_this.src);
			
			_this.src = src ;

		}
	};

})(
window,
function(){
	
	//事件委托机制
	var xid = ".delegation";
	
	var F = {};
	
	$(function(){

		$(xid).on("click",function(event){
			
			var _this = event.target;
			
			var name;
			
			for( ; ; ){

				name = _this.getAttribute("$event");
			
				if(name) {
					
					if(F[name]) F[name].apply(_this,[event,this]);
					break;
					
				}

				_this = _this.parentElement;

				if(!_this) break;

				if(_this.className.replace(/\s{2,}/g," ").split(" ").indexOf(onclick) > -1){

					break;

				}

			}
			
		})
		
	})
	
	return F;
	
}(),
function(){
	
	//组件插件
	var _this = {};;
	
	//遮罩
	_this.Cover = new function(){
		
		this.__Element;
		
		this.__showElement;
		
		this.__createElement = function(){
			
			var d = document.createElement("div");
			d.style.cssText += "top: 0;position:absolute;width:100%;height:100%;background-color:rgba(105, 101, 101, 0.7);z-index: 9999999;";
			this.__Element = d;
			document.body.appendChild(d);
			
			return d;
			
		};
		
		this.show = function(elem){
			
			var e = this.__Element || this.__createElement();

			e.style.display = "block";
			
			if(!elem) return ;
			
			elem.$zIndex = elem.style.zIndex;
			
			elem.style.zIndex = "10000000";
			
			this.__showElement = elem;
			
		};
		
		this.hide = function(){
			
			if(!this.__Element) return;
			
			this.__Element.style.display = "none";
			
			var e = this.__showElement;

			if(!e) return;
			
			e.style.zIndex = e.$zIndex;
			
		};
		
	}();

	return _this;
	
},
function(){
	
	/*委托加载触摸变化事件*/
	$(function(){
	
		var Xid = ".touchParent";
		
		var pro = {
			
			mouseenter : "m_style",
		
			mouseleave : "l_style"
		}
	
	
		var o = $(".touchParent").children();
		
		var mouse = function(event){
			
			var type = pro[event.type];
			
			var _this = $(this);
			
			var paren = _this.parent();
			
			eval("var style = " + paren.attr(type));
			
			for( var u in style){
				
				var v = style[u];
				_this.css(u,v);
				
			}
			
			eval("style = " + _this.attr(type));
			
			if(style){
				
				for( var u in style){
				
					var v = style[u];
					_this.css(u,v);
					
				}
				
			}
			
		}
		
		o.mouseenter(mouse);
		o.mouseleave(mouse);
		
		
		o = $(".tUnit");
		o.mouseenter(mouse);
		o.mouseleave(mouse);
	})
	
}()

)

